<?xml version="1.0" encoding="UTF-8"?>
<xs:schema
    targetNamespace ="http://lt.5grupe.karolis/biosensor/model/bound"
    xmlns           ="http://lt.5grupe.karolis/biosensor/model/bound"
    xmlns:m         ="http://lt.5grupe.karolis/biosensor/model"
    xmlns:xs        ="http://www.w3.org/2001/XMLSchema"
    elementFormDefault="qualified">
    
    
    
    <xs:import
        namespace="http://lt.5grupe.karolis/biosensor/model"
        schemaLocation="Model.xsd">
    </xs:import>
    
    
    
    <xs:complexType name="Constant">
        <xs:complexContent>
            <xs:extension base="m:BoundSubstance">
                <xs:attribute name="concentration" type="m:SymbolName" use="required"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    
    <xs:complexType name="Wall">
        <xs:complexContent>
            <xs:extension base="m:BoundSubstance"/>
        </xs:complexContent>
    </xs:complexType>
    
    <xs:complexType name="Merge">
        <xs:complexContent>
            <xs:extension base="m:BoundSubstance"/>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="Conversion">
        <xs:annotation>
            <xs:documentation>
                1. This condition should be applicable in two cases:
                  1.1. On the merge bound.
                  1.2. On the wall bound.
                2. If not(product/@in), then default is to use value of @in.
                3. Reaction (conversion) rate is threated as infinite. I.e. all
                   the substrate is cononverted into product.
                4. Maybe this structure should be as a nested element
                   in all other conditions?
                5. Are those "@in" really required?
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="m:BoundSubstance">
                <xs:sequence>
                    <xs:element name="product">
                        <xs:complexType>
                            <xs:attribute name="name" type="m:SubstanceName" use="required"/>
                            <xs:attribute name="in"   type="m:MediumName"    use="optional"/>
                        </xs:complexType>
                    </xs:element>
                </xs:sequence>
                <xs:attribute name="in" type="m:MediumName" use="required"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    
    <xs:complexType name="Null">
        <xs:annotation>
            <xs:documentation>
                Sita krastine salyga nieko nereiskia. Ji buna ten, kur salia jos,
                abiejose pusese nera medziagos, kuriai si salyga nurodyta.
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="m:BoundSubstance"/>
        </xs:complexContent>
    </xs:complexType>
    

    
</xs:schema>
