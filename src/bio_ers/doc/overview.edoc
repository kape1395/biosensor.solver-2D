@author Karolis Petrauskas <k.petrauskas@gmail.com>
@copyright 2012 Karolis Petrauskas
@version 0.7.0
@title Erlang Server for Simulating Biosensors
@doc

== Introduction ==

`bio_ers' is an Erlang server for simulating biosensor operation.

Main data structures are described in the {@link bio_ers} module.


== Simulation output ==

All the output generated by the solver is stored in the file system.
While the simulation is not completed yet, its output is stored in
the temporary folder. After the simulation was completed, its data
is moved to the separate folder.

It was decided to use the file system for storing output of the
simulations mainly because of performance aspects.
Only references to the corresponding files will be stored
in the Mnesia data base. 


== Simulation checkpoints ==

Checkpoints are used to support simulation restarts and rollbacks.
The checkpoints are requested by the Erlang processes (usually {@link bio_ers_solver})
and generated by the external solver process.
When the solver receives the request to create the checkpoint,
it sends a message back to the port's connected process containing
all the data needed to restore the simulation to the identical situation.

When making the checkpoint, the solver flushes all the output
streams and record the current stream positions (using `std::ostream::tellp()').
References to the output files along with the stream positions are then
sent to the Erlang process ({@link bio_ers_solver}).
Apart from the output files, current concentrations of species should be
saved as well as all the internal state of the attached listeners.
Both of them are sent to the Erlang in the
{@link bio_ers_solver:port_checkpoint(). port_checkpoint} message directly.
Such approach was considered expecting that it should be easier
to maintain the checkpoints and higher precision will be maintained when
storing concentrations (because of 64-bit IEEE format for floats when the
`{minor_version, 1}' option is set for the `erlang:term_to_binary/2').

