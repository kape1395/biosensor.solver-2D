                      Biosensor Simulation Erlang Server
                                    bio_ers

This is an Erlang application supposed to manage execution of multiple
simulations. The name `bio_ers' stands for "Biosensor (bio) simulation
Erlang (er) Server (s)". The server should support:
  * Queue simulation jobs and execute them.
  * Provide convenient way to express parameter variation.
  * Help to manage calculation on multiple machines.
  * Maybe to help submitting jobs to a grid.

Design decisions:
  * Implement process pool (simulation job queue). No maintained embedable
    implementation was found.
  * Use Erl_Interface to implement biosensor solver port. Maybe its better
    to not invent own protocol.
  * Transformation of a model to a atructure of primitive solver components
    should be done in erlang. I am expecting to have cleaner code in this way.
    Another aspect is that C++ side should be rewritten anyway to employ
    IoC pattern instead of heavy constructors where appropriate.

Used modules (dependencies):
  * xmerl_scan
  * eunit

Some useful commands for a developer:
    erl -pa ebin -s bio_ers_app startup
        application:which_applications().   # List running apps.
        eunit:test(bio_ers).                # Run unit tests.
        rr(xmerl).                          # Load record definitions.
        rp([list, {a}]).                    # Prints all the structure recursivelly
        i().                                # Lists processes.
        pman:start().                       # Process manager (GUI).
        appmon:start().                     # Application manager (GUI).
        init:stop().                        # Quit.

    make test_run   # For the change-compile-check loop...
        rp({os:cmd("make"), code:purge(bio_ers_model), code:load_file(bio_ers_model)}).
        rp(bio_ers_model:parse_file("test/bio_ers_model_tests-CNT-2D.xml")).

    make check      # Runs all the unit tests.
